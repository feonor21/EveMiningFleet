// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EveMiningFleet.Entities.Migrations
{
    [DbContext(typeof(EveMiningFleetContext))]
    [Migration("20220505000036_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("eveminingfleet.AlerteMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("AlerteMessages");
                });

            modelBuilder.Entity("eveminingfleet.Alliance", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("eveminingfleet.Character", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AllianceId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterMainId")
                        .HasColumnType("int");

                    b.Property<int>("CorporationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Token")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("AllianceId");

                    b.HasIndex("CharacterMainId");

                    b.HasIndex("CorporationId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("eveminingfleet.Corporation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("Corporations");
                });

            modelBuilder.Entity("eveminingfleet.DataPrice", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("PriceBuy")
                        .HasColumnType("double");

                    b.Property<double>("PriceSell")
                        .HasColumnType("double");

                    b.HasKey("TypeId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("Dataprices");
                });

            modelBuilder.Entity("eveminingfleet.Fleet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AllianceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("CorporationId")
                        .HasColumnType("int");

                    b.Property<int?>("Distribution")
                        .HasColumnType("int");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JoinToken")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastFullRefresh")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Reprocess")
                        .HasColumnType("double");

                    b.Property<int?>("ViewRight")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("AllianceId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CorporationId");

                    b.ToTable("Fleets");
                });

            modelBuilder.Entity("eveminingfleet.Fleetcharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("FleetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Join")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastRefresh")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Quit")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("CharacterId");

                    b.HasIndex("FleetId");

                    b.ToTable("Fleetcharacters");
                });

            modelBuilder.Entity("eveminingfleet.Fleetgroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FleetId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("FleetId");

                    b.ToTable("Fleetgroups");
                });

            modelBuilder.Entity("eveminingfleet.Fleetgroupcharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("FleetgroupId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("CharacterId");

                    b.HasIndex("FleetgroupId");

                    b.ToTable("Fleetgroupcharacters");
                });

            modelBuilder.Entity("eveminingfleet.Fleettaxes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("FleetId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("Taxe")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("CharacterId");

                    b.HasIndex("FleetId");

                    b.ToTable("Fleettaxes");
                });

            modelBuilder.Entity("eveminingfleet.Invtypematerial", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("TypeId", "MaterialTypeId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("Invtypematerials");
                });

            modelBuilder.Entity("eveminingfleet.Lastmininglog", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("OreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("CharacterId", "OreId", "Date")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex("OreId");

                    b.ToTable("Lastmininglogs");
                });

            modelBuilder.Entity("eveminingfleet.Mininglog", b =>
                {
                    b.Property<int>("FleetCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("OreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("FleetCharacterId", "OreId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("OreId");

                    b.ToTable("Mininglogs");
                });

            modelBuilder.Entity("eveminingfleet.Ore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("CanBeCompressed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IdCompressed")
                        .HasColumnType("int");

                    b.Property<int?>("IdSkillOreReprocessing")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("PriceCompressedBuy")
                        .HasColumnType("double");

                    b.Property<double?>("PriceCompressedSell")
                        .HasColumnType("double");

                    b.Property<double?>("PriceRefinedBuy")
                        .HasColumnType("double");

                    b.Property<double?>("PriceRefinedSell")
                        .HasColumnType("double");

                    b.Property<int?>("QuantityForReprocess")
                        .HasColumnType("int");

                    b.Property<float?>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("Ores");
                });

            modelBuilder.Entity("eveminingfleet.Character", b =>
                {
                    b.HasOne("eveminingfleet.Alliance", "Alliance")
                        .WithMany()
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eveminingfleet.Character", "CharacterMain")
                        .WithMany()
                        .HasForeignKey("CharacterMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eveminingfleet.Corporation", "Corporation")
                        .WithMany()
                        .HasForeignKey("CorporationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveminingfleet.Fleet", b =>
                {
                    b.HasOne("eveminingfleet.Alliance", "Alliance")
                        .WithMany()
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eveminingfleet.Character", "Character")
                        .WithMany("Fleets")
                        .HasForeignKey("CharacterId")
                        .IsRequired();

                    b.HasOne("eveminingfleet.Corporation", "Corporation")
                        .WithMany()
                        .HasForeignKey("CorporationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveminingfleet.Fleetcharacter", b =>
                {
                    b.HasOne("eveminingfleet.Character", "Character")
                        .WithMany("Fleetcharacters")
                        .HasForeignKey("CharacterId")
                        .IsRequired();

                    b.HasOne("eveminingfleet.Fleet", "Fleet")
                        .WithMany("Fleetcharacters")
                        .HasForeignKey("FleetId")
                        .IsRequired();
                });

            modelBuilder.Entity("eveminingfleet.Fleetgroup", b =>
                {
                    b.HasOne("eveminingfleet.Fleet", "Fleet")
                        .WithMany("Fleetgroups")
                        .HasForeignKey("FleetId")
                        .IsRequired();
                });

            modelBuilder.Entity("eveminingfleet.Fleetgroupcharacter", b =>
                {
                    b.HasOne("eveminingfleet.Character", "Character")
                        .WithMany("Fleetgroupcharacters")
                        .HasForeignKey("CharacterId")
                        .IsRequired();

                    b.HasOne("eveminingfleet.Fleetgroup", "Fleetgroup")
                        .WithMany("Fleetgroupcharacters")
                        .HasForeignKey("FleetgroupId")
                        .IsRequired();
                });

            modelBuilder.Entity("eveminingfleet.Fleettaxes", b =>
                {
                    b.HasOne("eveminingfleet.Character", "Character")
                        .WithMany("Fleettaxes")
                        .HasForeignKey("CharacterId");

                    b.HasOne("eveminingfleet.Fleet", "Fleet")
                        .WithMany("Fleettaxes")
                        .HasForeignKey("FleetId")
                        .IsRequired();
                });

            modelBuilder.Entity("eveminingfleet.Lastmininglog", b =>
                {
                    b.HasOne("eveminingfleet.Character", "Character")
                        .WithMany("Lastmininglogs")
                        .HasForeignKey("CharacterId")
                        .HasConstraintName("FK_lastMiningLogs_characters_Character_Id")
                        .IsRequired();

                    b.HasOne("eveminingfleet.Ore", "Ore")
                        .WithMany("Lastmininglogs")
                        .HasForeignKey("OreId")
                        .HasConstraintName("FK_lastMiningLogs_ores_Ore_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("eveminingfleet.Mininglog", b =>
                {
                    b.HasOne("eveminingfleet.Fleetcharacter", "FleetCharacter")
                        .WithMany("Mininglogs")
                        .HasForeignKey("FleetCharacterId")
                        .IsRequired();

                    b.HasOne("eveminingfleet.Ore", "Ore")
                        .WithMany("Mininglogs")
                        .HasForeignKey("OreId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
